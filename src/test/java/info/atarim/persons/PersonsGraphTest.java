/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package info.atarim.persons;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;

import java.util.ArrayList;
import java.util.List;

import org.junit.jupiter.api.Test;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class PersonsGraphTest {
	private static final Logger LOG = LoggerFactory.getLogger(PersonsGraphTest.class );

	
    @Test 
    public void testBuldPersonTree() {
        
      	
    	Address address1 = new Address("Bletchey Park", "Cambridge");
    	Address address2 = new Address("Picadili", "London");
    	Address address3 = new Address("5th Av", "New York");
    	
    	Name fullName1 = new Name("Alan", "Turing");
    	Name fullName2 = new Name("Joan", "Clarke");
    	Name fullName3 = new Name("Grace", "Hopper");
    	
    	Person person11 = new Person(fullName1, address1);
    	Person person12 = new Person(fullName1, address1);
    	Person person21 = new Person(fullName2, address1);
    	Person person22 = new Person(fullName2, address2);
    	Person person31 = new Person(fullName3, address3);
    	
    	List<Person> people = new ArrayList<>();
    	people.add(person11);
    	people.add(person12);
    	people.add(person21);
    	people.add(person22);
    	people.add(person31);
    	
    	
    	PersonsGraph personsGraph = new PersonsGraph();
    	
    	Person[] personsArray = new Person[5];
    	
    	personsGraph.init(people.toArray(personsArray));
    	LOG.debug(personsGraph.toString());
  
        
        assertNotNull(personsGraph, "personsGraph not null");
    }
    
    
    @Test
    public void testrelationships() {
    	Address address1 = new Address("Bletchey Park", "Cambridge");
    	Address address2 = new Address("Picadili", "London");
    	Address address3 = new Address("5th Av", "New York");
    	
    	Name fullName1 = new Name("Alan", "Turing");
    	Name fullName2 = new Name("Joan", "Clarke");
    	Name fullName3 = new Name("Grace", "Hopper");
    	
    	Person person11 = new Person(fullName1, address1);
    	Person person12 = new Person(fullName1, address2);
    	Person person21 = new Person(fullName2, address1);
    	Person person22 = new Person(fullName2, address2);
    	Person person31 = new Person(fullName3, address3);
    	
    	List<Person> people = new ArrayList<>();
    	people.add(person11);
    	people.add(person12);
    	people.add(person21);
    	people.add(person22);
    	people.add(person31);
    	
    	
    	PersonsGraph personsGraph = new PersonsGraph();
    	
    	Person[] personsArray = new Person[5];
    	
    	personsGraph.init(people.toArray(personsArray));
    	LOG.info(personsGraph.toString());
    	
    	assertRelationship(0, personsGraph, person11, person11);   	   	
    	assertRelationship(1, personsGraph, person11, person12);
    	
    	assertRelationship(1, personsGraph, person11, person21);
    	assertRelationship(2, personsGraph, person11, person22);
    	
    	assertRelationship(-1, personsGraph, person11, person31);
    	assertRelationship(-1, personsGraph, person21, person31);

    }


	private void assertRelationship(int expected, PersonsGraph personsGraph, Person personA, Person personB) {
		PersonsGraph.printRelationashipLevel(personsGraph, personA, personB);
    	assertEquals(expected, personsGraph.findMinRelationLevel(personA, personB));
	}
    
    
    
}
